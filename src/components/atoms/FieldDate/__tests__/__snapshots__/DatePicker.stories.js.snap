// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`with date only 1`] = `
<div
  style={
    Object {
      "margin": "16px",
    }
  }
>
  <Contain(FieldDate)
    dateOnly={true}
    onChange={[Function]}
    startTime={null}
  >
    <FieldDate
      dateOnly={true}
      handleChange={[Function]}
      onChange={[Function]}
      startDate={null}
      startTime={null}
    >
      <DatePicker
        allowSameDay={false}
        customInput={<InputComponent />}
        dateFormat="yyyy/MM/dd"
        dateFormatCalendar="LLLL yyyy"
        disabled={false}
        disabledKeyboardNavigation={false}
        dropdownMode="scroll"
        inlineFocusSelectedMonth={false}
        minDate={2019-04-13T05:46:56.213Z}
        monthsShown={1}
        nextMonthButtonLabel="Next month"
        onBlur={[Function]}
        onChange={[Function]}
        onClickOutside={[Function]}
        onFocus={[Function]}
        onInputClick={[Function]}
        onInputError={[Function]}
        onKeyDown={[Function]}
        onMonthChange={[Function]}
        onSelect={[Function]}
        onYearChange={[Function]}
        placeholderText="yyyy/mm/dd"
        preventOpenOnFocus={false}
        previousMonthButtonLabel="Previous Month"
        readOnly={false}
        renderDayContents={[Function]}
        selected={null}
        shouldCloseOnSelect={true}
        showMonthYearPicker={false}
        showTimeInput={false}
        showTimeSelect={false}
        strictParsing={false}
        timeCaption="Time"
        timeInputLabel="Time"
        timeIntervals={30}
        withPortal={false}
      >
        <PopperComponent
          hidePopper={true}
          popperComponent={null}
          popperModifiers={
            Object {
              "preventOverflow": Object {
                "boundariesElement": "viewport",
                "enabled": true,
                "escapeWithReference": true,
              },
            }
          }
          popperPlacement="bottom-start"
          popperProps={Object {}}
          targetComponent={
            <div
              className="react-datepicker__input-container"
            >
              <InputComponent
                className=""
                disabled={false}
                onBlur={[Function]}
                onChange={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onKeyDown={[Function]}
                placeholder="yyyy/mm/dd"
                readOnly={false}
                value=""
              />
            </div>
          }
        >
          <Manager>
            <Reference>
              <InnerReference
                setReferenceNode={[Function]}
              >
                <div
                  className="react-datepicker-wrapper"
                >
                  <div
                    className="react-datepicker__input-container"
                  >
                    <InputComponent
                      className=""
                      disabled={false}
                      onBlur={[Function]}
                      onChange={[Function]}
                      onClick={[Function]}
                      onFocus={[Function]}
                      onKeyDown={[Function]}
                      placeholder="yyyy/mm/dd"
                      readOnly={false}
                      value=""
                    >
                      <label
                        className="label"
                      >
                        <input
                          className="input"
                          disabled={false}
                          onBlur={[Function]}
                          onChange={[Function]}
                          onClick={[Function]}
                          onFocus={[Function]}
                          onKeyDown={[Function]}
                          placeholder="yyyy/mm/dd"
                          readOnly={false}
                          type="text"
                          value=""
                        />
                      </label>
                    </InputComponent>
                  </div>
                </div>
              </InnerReference>
            </Reference>
          </Manager>
        </PopperComponent>
      </DatePicker>
    </FieldDate>
  </Contain(FieldDate)>
</div>
`;

exports[`with default 1`] = `
<div
  style={
    Object {
      "margin": "16px",
    }
  }
>
  <Contain(FieldDate)
    onChange={[Function]}
    startTime={null}
  >
    <FieldDate
      handleChange={[Function]}
      onChange={[Function]}
      startDate={null}
      startTime={null}
    >
      <DatePicker
        allowSameDay={false}
        customInput={<InputComponent />}
        dateFormat="MMMM d, yyyy h:mm aa"
        dateFormatCalendar="LLLL yyyy"
        disabled={false}
        disabledKeyboardNavigation={false}
        dropdownMode="scroll"
        inlineFocusSelectedMonth={false}
        minDate={2019-04-13T05:46:56.172Z}
        monthsShown={1}
        nextMonthButtonLabel="Next month"
        onBlur={[Function]}
        onChange={[Function]}
        onClickOutside={[Function]}
        onFocus={[Function]}
        onInputClick={[Function]}
        onInputError={[Function]}
        onKeyDown={[Function]}
        onMonthChange={[Function]}
        onSelect={[Function]}
        onYearChange={[Function]}
        placeholderText="MMMM d, yyyy h:mm aa"
        preventOpenOnFocus={false}
        previousMonthButtonLabel="Previous Month"
        readOnly={false}
        renderDayContents={[Function]}
        selected={null}
        shouldCloseOnSelect={true}
        showMonthYearPicker={false}
        showTimeInput={false}
        showTimeSelect={true}
        strictParsing={false}
        timeCaption="time"
        timeFormat="HH:mm"
        timeInputLabel="Time"
        timeIntervals={15}
        withPortal={false}
      >
        <PopperComponent
          hidePopper={true}
          popperComponent={null}
          popperModifiers={
            Object {
              "preventOverflow": Object {
                "boundariesElement": "viewport",
                "enabled": true,
                "escapeWithReference": true,
              },
            }
          }
          popperPlacement="bottom-start"
          popperProps={Object {}}
          targetComponent={
            <div
              className="react-datepicker__input-container"
            >
              <InputComponent
                className=""
                disabled={false}
                onBlur={[Function]}
                onChange={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onKeyDown={[Function]}
                placeholder="MMMM d, yyyy h:mm aa"
                readOnly={false}
                value=""
              />
            </div>
          }
        >
          <Manager>
            <Reference>
              <InnerReference
                setReferenceNode={[Function]}
              >
                <div
                  className="react-datepicker-wrapper"
                >
                  <div
                    className="react-datepicker__input-container"
                  >
                    <InputComponent
                      className=""
                      disabled={false}
                      onBlur={[Function]}
                      onChange={[Function]}
                      onClick={[Function]}
                      onFocus={[Function]}
                      onKeyDown={[Function]}
                      placeholder="MMMM d, yyyy h:mm aa"
                      readOnly={false}
                      value=""
                    >
                      <label
                        className="label"
                      >
                        <input
                          className="input"
                          disabled={false}
                          onBlur={[Function]}
                          onChange={[Function]}
                          onClick={[Function]}
                          onFocus={[Function]}
                          onKeyDown={[Function]}
                          placeholder="MMMM d, yyyy h:mm aa"
                          readOnly={false}
                          type="text"
                          value=""
                        />
                      </label>
                    </InputComponent>
                  </div>
                </div>
              </InnerReference>
            </Reference>
          </Manager>
        </PopperComponent>
      </DatePicker>
    </FieldDate>
  </Contain(FieldDate)>
</div>
`;

exports[`with time only 1`] = `
<div
  style={
    Object {
      "margin": "16px",
    }
  }
>
  <Contain(FieldDate)
    onChange={[Function]}
    startTime={null}
    timeOnly={true}
  >
    <FieldDate
      handleChange={[Function]}
      onChange={[Function]}
      startDate={null}
      startTime={null}
      timeOnly={true}
    >
      <DatePicker
        allowSameDay={false}
        customInput={<InputComponent />}
        dateFormat="HH:mm"
        dateFormatCalendar="LLLL yyyy"
        disabled={false}
        disabledKeyboardNavigation={false}
        dropdownMode="scroll"
        inlineFocusSelectedMonth={false}
        minDate={2019-04-13T05:46:56.224Z}
        monthsShown={1}
        nextMonthButtonLabel="Next month"
        onBlur={[Function]}
        onChange={[Function]}
        onClickOutside={[Function]}
        onFocus={[Function]}
        onInputClick={[Function]}
        onInputError={[Function]}
        onKeyDown={[Function]}
        onMonthChange={[Function]}
        onSelect={[Function]}
        onYearChange={[Function]}
        placeholderText="HH:mm"
        preventOpenOnFocus={false}
        previousMonthButtonLabel="Previous Month"
        readOnly={false}
        renderDayContents={[Function]}
        selected={null}
        shouldCloseOnSelect={true}
        showMonthYearPicker={false}
        showTimeInput={false}
        showTimeSelect={true}
        showTimeSelectOnly={true}
        strictParsing={false}
        timeCaption="Time"
        timeFormat="HH:mm"
        timeInputLabel="Time"
        timeIntervals={60}
        withPortal={false}
      >
        <PopperComponent
          hidePopper={true}
          popperComponent={null}
          popperModifiers={
            Object {
              "preventOverflow": Object {
                "boundariesElement": "viewport",
                "enabled": true,
                "escapeWithReference": true,
              },
            }
          }
          popperPlacement="bottom-start"
          popperProps={Object {}}
          targetComponent={
            <div
              className="react-datepicker__input-container"
            >
              <InputComponent
                className=""
                disabled={false}
                onBlur={[Function]}
                onChange={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onKeyDown={[Function]}
                placeholder="HH:mm"
                readOnly={false}
                value=""
              />
            </div>
          }
        >
          <Manager>
            <Reference>
              <InnerReference
                setReferenceNode={[Function]}
              >
                <div
                  className="react-datepicker-wrapper"
                >
                  <div
                    className="react-datepicker__input-container"
                  >
                    <InputComponent
                      className=""
                      disabled={false}
                      onBlur={[Function]}
                      onChange={[Function]}
                      onClick={[Function]}
                      onFocus={[Function]}
                      onKeyDown={[Function]}
                      placeholder="HH:mm"
                      readOnly={false}
                      value=""
                    >
                      <label
                        className="label"
                      >
                        <input
                          className="input"
                          disabled={false}
                          onBlur={[Function]}
                          onChange={[Function]}
                          onClick={[Function]}
                          onFocus={[Function]}
                          onKeyDown={[Function]}
                          placeholder="HH:mm"
                          readOnly={false}
                          type="text"
                          value=""
                        />
                      </label>
                    </InputComponent>
                  </div>
                </div>
              </InnerReference>
            </Reference>
          </Manager>
        </PopperComponent>
      </DatePicker>
    </FieldDate>
  </Contain(FieldDate)>
</div>
`;
